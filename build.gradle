plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'

	id 'jacoco'
}

group = 'com.click'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2023.0.2")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testRuntimeOnly 'com.h2database:h2'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacocoTestCoverageVerification{
	violationRules {
		enabled = true
		rule {
			element = 'CLASS'
			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 100
			}
		}
		rule {
			element = 'CLASS'
			includes = [
					'com.click.auth.service.**'
			]
			limit {
				value = 'COVEREDRATIO'
				minimum = 0.9
			}
		}
	}
}

jacocoTestReport {
	dependsOn test
	reports{
		html.required = true
	}
	finalizedBy('jacocoTestCoverageVerification')
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy('jacocoTestReport')
}
